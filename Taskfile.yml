version: "3"

vars:
  EXE:
    sh: |
      if [[ "$(go env GOOS)" == "windows" ]]; then
        echo ".exe"
      else
        echo ""
      fi
  DB_COMMANDS:
    sh: |
      echo "CREATE DATABASE barkdog; CREATE USER barkadmin LOGIN; ALTER DATABASE barkdog OWNER TO barkadmin;"

tasks:
  resetdb:
    desc: Resets the database (loses all data)
    deps: ["build_resetdb"]
    cmds:
      - "./dist/resetdb/resetdb{{.EXE}}"

  mup:
    desc: Task to run migrations
    deps: ["build_migrate"]
    cmds:
      - "./dist/migrate/migrate{{.EXE}} up"

  mstatus:
    desc: Task to run migrations
    deps: ["build_migrate"]
    cmds:
      - "./dist/migrate/migrate{{.EXE}} status"

  genmodel:
    desc: Generates models from database
    deps: ["build_pggen", "mup"]
    cmds:
      - "./dist/pggen/pggen{{.EXE}}"

  gen:
    desc: Calls all generation tasks
    deps: ["genmodel"]

  build_serve:
    desc: Task to build serve tool.
    deps: ["build_ui", "gen"]
    cmds:
      - "go build -o ./dist/serve/serve{{.EXE}} ./cmd/serve"

  build_pggen:
    desc: Task to build pggen tool.
    cmds:
      - "go build -o ./dist/pggen/pggen{{.EXE}} ./cmd/pggen"

  build_migrate:
    desc: Task to build migrate tool.
    cmds:
      - "go build -o ./dist/migrate/migrate{{.EXE}} ./cmd/migrate"

  build_resetdb:
    desc: Task to build reset database command
    cmds:
      - "go build -o ./dist/resetdb/resetdb{{.EXE}} ./cmd/resetdb"

  prettier:
    desc: run prettier
    cmds:
      - yarn prettier . --write

  build_ui:
    desc: Build the frontend application.
    deps: ["prettier"]
    cmds:
      - "node build_ui.js"

  watch_ui:
    desc: Watch and rebuild the frontend application on changes.
    cmds:
      - "node build_ui.js --watch"

  build:
    desc: Calls all build tasks and depends on gen
    deps: ["build_serve", "build_pggen", "build_migrate"]
